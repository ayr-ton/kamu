version: 2.1
defaults: &defaults
  working_directory: ~/kamu
  docker:
    - image: circleci/python:3.7.0
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name:  Download cc-test-reporter
          command: make download-cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter
  security-checks:
    <<: *defaults
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: make security-checks
      - store_artifacts:
          path: /tmp/artifacts/hawkeye_report.json
  backend-tests:
    <<: *defaults
    docker:
      - image: python:3.6.0
    steps:
      - checkout
      - attach_workspace:
          at: ~/kamu/tmp
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          command: |
              make backend-deps
      - save_cache:
            key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
            paths:
              - "venv"
      - run:
          command: make backend-tests
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.backend.json
  frontend-tests:
    <<: *defaults
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - attach_workspace:
          at: ~/kamu/tmp
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          command: make frontend-deps
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          command: make frontend-lint
      - run:
          command: make frontend-tests
      - persist_to_workspace:
          root: tmp
          paths: 
            - codeclimate.frontend.json
  upload-coverage:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/kamu/tmp
      - run:
          name: Upload coverage results to Code Climate
          command: make upload-coverage
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - backend-tests:
          requires:
            - build
      - frontend-tests:
          requires: 
             - build
      - upload-coverage:
          requires:
             - backend-tests
             - frontend-tests
  nightly:
    jobs:
      - security-checks
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
